Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.
Assume the environment does not allow you to store 64-bit integers (signed or unsigned).
 
Example 1:
Input: x = 123
Output: 321
Example 2:
Input: x = -123
Output: -321
Example 3:
Input: x = 120
Output: 21



Range 
	-2,147,483,648 to 2,147,483,647
	

public static int reverse(int x) {
        long reversedNumber = 0;
        int remainder;
        while (x != 0) {
            remainder = x % 10;
            reversedNumber = (reversedNumber * 10) + remainder;
            x = x / 10;
//            if ((reversedNumber < -2147483648) || (reversedNumber > 2147483647)) {
//                return 0;
//            }
        }
        return (int)reversedNumber;
    }

